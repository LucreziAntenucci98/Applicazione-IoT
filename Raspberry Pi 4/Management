============== FATTO ================
 1) connesso SSH
 2) connesso MQTT
 3) connesso BMP280
 4) connesso BH1750
 
 6) invio messaggi dei sensori per MQTT
	
============== FARE =================	
 5) connettere RTC (mancano i cavi)
 
 7) gestire attraverso i task le acquisizioni e i messaggi
 8) visualizzazione web da raspberry (cercare framework esistenti)
	
============== DOMANDE ============== 
 1) i dati devono essere pubblicati su MQTT con la stessa frequenza o con frequenze diverse? Possono essere inviati tutti dallo stesso loop?
 	FARE TASK DIVERSI CON DIVERSE PRIORITA' E DIVERSE FREQUENZE
 2) nome host non funziona al posto di indirizzo IP
 	LASCIAMO INDIRIZZO IP
 3) visualizzazione web tramite python o c? Ci può dare consigli per una indrizzata generica?
 	ESISTONO FRAMEWORK CHE FANNO GIA' TUTTO, ANCHE METTERE LO STORICO
 
============== MODIFICHE RASPBERRY ==
 File ritoccati:
 -> /etc/rc.local ->
	abbiamo scritto codice per avviare il codice python leggi_sensori.py
	
 -> /home/RaspBerry/scripts/leggi_sensori.py ->
	codice per leggere sensori da MQTT
	
 -> /var/www/html/index.html ->
 	impostata la visualizzazione della pagina
 	
 -> /var/www/html/script.php ->
 	tentativo visualizzazione dinamica della pagina
 	
 -> sudo nano /etc/mosquitto/mosquitto.conf
 	#SCRIVI QUESTO
	listener 1883
	listener 9001
	protocol websockets
	socket_domain ipv4
	allow_anonymous true
	
    sudo systemctl restart mosquitto
    sudo apt-get install apache2
    sudo apt-get install libapache2-mod-php
    cd /var/www/html
    sudo mkdir TeamBerryWEB
    
    installare mariadb
    installare phpmyadmin
    installare mqttwarn
    
    se manca il modulo MySQLdb: https://appuals.com/no-module-named-mysqldb/
    poi pip install mysqlclient

	pip install websocket
	pip install gevent-websocket
	pip install Flask Flask-SocketIO

    in /home/RaspBerry/templates/index.html:
    <!DOCTYPE html>
<html lang="it">
<head>
<meta charset="UTF-8">
<title>Lettura Real Time</title>
<script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js"></script>
</head>
<body>

<h1 id="luminosity-header"></h1>
<p id="luminosity-time"></p> 

<h1 id="temperature-header"></h1>
<p id="temperature-time"></p>

<h1 id="pressure-header"></h1>
<p id="pressure-time"></p>

<h1 id="altitude-header"></h1>
<p id="altitude-time"></p>

<script type="text/javascript">
    var socket = io.connect('http://' + document.domain + ':' + location.port);
    socket.on('mqtt_message_L', function(msg) {
        document.getElementById('luminosity-header').innerHTML = "Luminosity: "+msg.value+" lx";
        document.getElementById('luminosity-time').innerHTML = "Acquisizione delle "+formatDate(msg.timestamp);
    });
    socket.on('mqtt_message_A', function(msg) {
        document.getElementById('altitude-header').innerHTML = "Altitude: "+msg.value+" m";
        document.getElementById('altitude-time').innerHTML = "Acquisizione delle "+formatDate(msg.timestamp);
    });
    socket.on('mqtt_message_P', function(msg) {
        document.getElementById('pressure-header').innerHTML = "Pressure: "+msg.value+" hPa";
        document.getElementById('pressure-time').innerHTML = "Acquisizione delle "+formatDate(msg.timestamp);
    });
    socket.on('mqtt_message_T', function(msg) {
        document.getElementById('temperature-header').innerHTML = "Temperature: "+msg.value+" °C";
        document.getElementById('temperature-time').innerHTML = "Acquisizione delle "+formatDate(msg.timestamp);
    });

    function formatDate(timestamp) {
        var date = new Date(timestamp);
        var formattedDate = date.toLocaleTimeString() + " " + date.toLocaleDateString();
        return formattedDate;
    }
</script>

</body>
</html>




